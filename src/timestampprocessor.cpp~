#include "litmustimestamp.hpp"

LitmusTimestamp* LitmusTimestamp::litmusTimestampInstance = 0;


LitmusTimestamp::LitmusTimestamp(){

}

LitmusTimestamp* LitmusTimestamp::getInstance(){
  if(!litmusTimestampInstance){
    litmusTimestampInstance = new LitmusTimestamp();
  }
  return litmusTimestampInstance;
}

overhead_t LitmusTimestamp:: processTS(struct timestamp* ts, unsigned long& id) {

        if ( !(ts->task_type != TSK_RT) ) {
      	if (ts->event == TS_CXS_START || ts->event == TS_CXS_END ) {
	  
      	  
      	  if (maxCXS < currentOverhead) {
      	    maxCXS = currentOverhead;
      	    this->updateLitmusOverheadObservers();
      	  }
      	  continue;
      	}
      }
  id = TS_CXS_START;
  return 500;
}
